
import java.awt.event.KeyEvent;
import java.io.*;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;


/*
 * To change this template, choose Tools | Templates and open the template in
 * the editor.
 */
/**
 *
 * @author jayantharilela
 */
public class page1 extends javax.swing.JFrame {

   static byte confirm=0,nf=0, idf=0;
   
   public page1(){
      initComponents();
      
   }

public void write(String a) throws IOException{
   
    
   FileReader fr = new FileReader("src/users.txt");
   BufferedReader br = new BufferedReader(fr);
   String users="";
   String str;
   int num=0;
   while((str=br.readLine())!=null){
      users=users+str+" \n";
      num=num+1;
   }
   br.close();
   
   FileWriter fw = new FileWriter("src/users.txt");
   PrintWriter pw = new PrintWriter(fw);
   pw.println(users+a);
   pw.println(100000+(num/2)+1);
   JOptionPane.showMessageDialog(this, "Your Participant ID is "+(100000+(num/2)+1), "Participant ID", JOptionPane.INFORMATION_MESSAGE);
   pw.close();
   System.out.println("write successful");
}

public int check(String a) throws FileNotFoundException, IOException{
    System.out.println(new File(".").getAbsolutePath() );
   int val=0;
   FileReader fr = new FileReader("src/users.txt");
   BufferedReader br = new BufferedReader(fr);
   String str;
   while((str=br.readLine())!=null){
      str=str.trim();
      if(str.equalsIgnoreCase(a)){
         String t =br.readLine();
         t=t.trim();
         val= Integer.parseInt(t);
         break;
      }
   }
   br.close();
   System.out.println(val);
   return val;
}
   
   /**
    * This method is called from within the constructor to initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is always
    * regenerated by the Form Editor.
    */
   @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jackal_pic = new javax.swing.JLabel();
        titulo = new javax.swing.JLabel();
        name_label = new javax.swing.JLabel();
        name_text = new javax.swing.JTextField();
        parid_label = new javax.swing.JLabel();
        parid_text = new javax.swing.JTextField();
        about_button = new javax.swing.JButton();
        continue_label = new javax.swing.JLabel();
        continue1 = new javax.swing.JButton();
        register_button = new javax.swing.JButton();
        background1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Jackal racer");
        setForeground(java.awt.Color.white);
        setMinimumSize(new java.awt.Dimension(849, 499));
        getContentPane().setLayout(null);

        jackal_pic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jackal.png"))); // NOI18N
        getContentPane().add(jackal_pic);
        jackal_pic.setBounds(520, 100, 350, 299);

        titulo.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        titulo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/titulo.png"))); // NOI18N
        getContentPane().add(titulo);
        titulo.setBounds(130, 20, 590, 160);

        name_label.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        name_label.setForeground(new java.awt.Color(255, 255, 255));
        name_label.setText("Name:");
        getContentPane().add(name_label);
        name_label.setBounds(180, 230, 80, 30);

        name_text.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        name_text.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                name_textKeyPressed(evt);
            }
        });
        getContentPane().add(name_text);
        name_text.setBounds(240, 220, 410, 40);

        parid_label.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        parid_label.setForeground(new java.awt.Color(255, 255, 255));
        parid_label.setText("Participant ID:");
        parid_label.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                parid_labelMouseClicked(evt);
            }
        });
        getContentPane().add(parid_label);
        parid_label.setBounds(120, 310, 130, 30);

        parid_text.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        parid_text.setToolTipText("leave blank if unknown");
        parid_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parid_textActionPerformed(evt);
            }
        });
        getContentPane().add(parid_text);
        parid_text.setBounds(240, 300, 408, 40);

        about_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/about_icon.png"))); // NOI18N
        about_button.setBorder(null);
        about_button.setFocusable(false);
        about_button.setPreferredSize(new java.awt.Dimension(5, 5));
        about_button.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/about_icon.png"))); // NOI18N
        about_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                about_buttonActionPerformed(evt);
            }
        });
        getContentPane().add(about_button);
        about_button.setBounds(620, 390, 62, 53);

        continue_label.setFont(new java.awt.Font("Lucida Grande", 1, 16)); // NOI18N
        continue_label.setForeground(new java.awt.Color(255, 255, 255));
        continue_label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        continue_label.setText("Continue");
        getContentPane().add(continue_label);
        continue_label.setBounds(380, 410, 120, 20);

        continue1.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        continue1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/button_icon.png"))); // NOI18N
        continue1.setBorder(null);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, parid_text, org.jdesktop.beansbinding.ELProperty.create("${KeyEvent.VK_B}"), continue1, org.jdesktop.beansbinding.BeanProperty.create("mnemonic"));
        bindingGroup.addBinding(binding);

        continue1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                continue1ActionPerformed(evt);
            }
        });
        continue1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                continue1KeyPressed(evt);
            }
        });
        getContentPane().add(continue1);
        continue1.setBounds(380, 400, 124, 42);

        register_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/new_user.png"))); // NOI18N
        register_button.setToolTipText("Register as a new User");
        register_button.setBorder(null);
        register_button.setFocusable(false);
        register_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                register_buttonActionPerformed(evt);
            }
        });
        getContentPane().add(register_button);
        register_button.setBounds(170, 370, 80, 70);

        background1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/background1.png"))); // NOI18N
        background1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        background1.setMaximumSize(new java.awt.Dimension(894, 499));
        getContentPane().add(background1);
        background1.setBounds(0, -30, 970, 550);

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

   private void continue1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_continue1ActionPerformed
        if(this.name_text.getText().matches(".*\\d.*")||this.name_text.getText().matches(".*[\\~\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\_\\+\\-\\=\\{\\}\\:\\;\\,\\.\\<\\>\\?\\/].*")){
         JOptionPane.showMessageDialog(this, "Please enter a valid name", "Error", JOptionPane.ERROR_MESSAGE);
         confirm = 0;}
         else{
         confirm= (byte) (confirm+1);}
         
         if(this.parid_text.getText().matches(".*[a-zA-Z]+.*")||this.parid_text.getText().matches(".*[\\~\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\_\\+\\-\\=\\{\\}\\:\\;\\,\\.\\<\\>\\?\\/].*")){
         JOptionPane.showMessageDialog(this, "Please enter a valid participant id", "Error", JOptionPane.ERROR_MESSAGE);
         confirm=0;}
         else{
         confirm= (byte) (confirm+1);}
      try {
         int parid=check(this.name_text.getText());
         if(parid==0){
            confirm=0;
             JOptionPane.showMessageDialog(this, "Name not registered", "Error", JOptionPane.INFORMATION_MESSAGE);
         }
        else{
            if(this.parid_text.getText().isEmpty()){
            confirm= (byte) (confirm+1);
            this.parid_text.setText(""+parid);
            JOptionPane.showMessageDialog(this, "Your Participant ID is "+parid, "Keep in Mind", JOptionPane.INFORMATION_MESSAGE);
         }
            else{
            if(parid==(Integer.parseInt(this.parid_text.getText()))){
            confirm= (byte) (confirm+1);
            }
         else{
            this.parid_text.setText(""+parid);
            confirm= (byte) (confirm+1);
            JOptionPane.showMessageDialog(this, "Your Participant ID is "+parid, "Keep in Mind", JOptionPane.INFORMATION_MESSAGE);
         }
            }
         }
      } 
      catch (FileNotFoundException ex) {
         Logger.getLogger(page1.class.getName()).log(Level.SEVERE, null, ex);
      } catch (IOException ex) {
         Logger.getLogger(page1.class.getName()).log(Level.SEVERE, null, ex);
      }
         
       if(confirm==3)
         {
      dispose();
         Main.parid = (String)this.parid_text.getText();
         Main.name = this.name_text.getText();
         Main.main2();}
       else
          {confirm=0;
          }     
         
   }//GEN-LAST:event_continue1ActionPerformed

   private void parid_textActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_parid_textActionPerformed
      // TODO add your handling code here:
   }//GEN-LAST:event_parid_textActionPerformed

   private void parid_labelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_parid_labelMouseClicked
      // TODO add your handling code here:
   }//GEN-LAST:event_parid_labelMouseClicked

   private void about_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_about_buttonActionPerformed
      JOptionPane.showMessageDialog(this, "This program has been designed and developed by Jayant Harilela", "About", JOptionPane.INFORMATION_MESSAGE, new javax.swing.ImageIcon(getClass().getResource("/jay.jpg")));
   }//GEN-LAST:event_about_buttonActionPerformed

   private void continue1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_continue1KeyPressed
        if(this.name_text.getText().matches(".*\\d.*")||this.name_text.getText().matches(".*[\\~\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\_\\+\\-\\=\\{\\}\\:\\;\\,\\.\\<\\>\\?\\/].*")){
         JOptionPane.showMessageDialog(this, "Please enter a valid name", "Error", JOptionPane.ERROR_MESSAGE);
         confirm = 0;}
         else{
         confirm= (byte) (confirm+1);}
         
         if(this.parid_text.getText().matches(".*[a-zA-Z]+.*")||this.parid_text.getText().matches(".*[\\~\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\_\\+\\-\\=\\{\\}\\:\\;\\,\\.\\<\\>\\?\\/].*")){
         JOptionPane.showMessageDialog(this, "Please enter a valid participant id", "Error", JOptionPane.ERROR_MESSAGE);
         confirm=0;}
         else{
         confirm= (byte) (confirm+1);}
      try {
         int parid=check(this.name_text.getText());
         if(parid==0){
            confirm=0;
             JOptionPane.showMessageDialog(this, "Name not registered", "Error", JOptionPane.INFORMATION_MESSAGE);
         }
         else{
            if(this.parid_text.getText().isEmpty()){
            confirm= (byte) (confirm+1);
            this.parid_text.setText(""+parid);
            JOptionPane.showMessageDialog(this, "Your Participant ID is "+parid, "Keep in Mind", JOptionPane.INFORMATION_MESSAGE);
         }
            else{
            if(parid==(Integer.parseInt(this.parid_text.getText()))){
               this.parid_text.setText(""+parid);
            confirm= (byte) (confirm+1);
            }
         else{
            this.parid_text.setText(""+parid);
            confirm= (byte) (confirm+1);
            JOptionPane.showMessageDialog(this, "Your Participant ID is "+parid, "Keep in Mind", JOptionPane.INFORMATION_MESSAGE);
         }
            }
         }
      } catch (FileNotFoundException ex) {
         Logger.getLogger(page1.class.getName()).log(Level.SEVERE, null, ex);
      } catch (IOException ex) {
         Logger.getLogger(page1.class.getName()).log(Level.SEVERE, null, ex);
      }
         
       if(confirm==3)
         {dispose();
         Main.parid = (String)this.parid_text.getText();
         Main.name = this.name_text.getText();
         Main.main2();}
       else
          {confirm=0;
          }  
   }//GEN-LAST:event_continue1KeyPressed

   private void register_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_register_buttonActionPerformed
      String s = JOptionPane.showInputDialog(this, "Enter name", "Please enter your credentials", JOptionPane.INFORMATION_MESSAGE);
      try {
         write(s);
      } catch (IOException ex) {
         Logger.getLogger(page1.class.getName()).log(Level.SEVERE, null, ex);
      }
   }//GEN-LAST:event_register_buttonActionPerformed

   private void name_textKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_name_textKeyPressed
      if (evt.getKeyCode()==KeyEvent.VK_ENTER){
            if(this.name_text.getText().matches(".*\\d.*")||this.name_text.getText().matches(".*[\\~\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\_\\+\\-\\=\\{\\}\\:\\;\\,\\.\\<\\>\\?\\/].*")){
         JOptionPane.showMessageDialog(this, "Please enter a valid name", "Error", JOptionPane.ERROR_MESSAGE);
         confirm = 0;}
         else{
         confirm= (byte) (confirm+1);}
         
         if(this.parid_text.getText().matches(".*[a-zA-Z]+.*")||this.parid_text.getText().matches(".*[\\~\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\_\\+\\-\\=\\{\\}\\:\\;\\,\\.\\<\\>\\?\\/].*")){
         JOptionPane.showMessageDialog(this, "Please enter a valid participant id", "Error", JOptionPane.ERROR_MESSAGE);
         confirm=0;}
         else{
         confirm= (byte) (confirm+1);}
      try {
         int parid=check(this.name_text.getText());
         if(parid==0){
            confirm=0;
             JOptionPane.showMessageDialog(this, "Name not registered", "Error", JOptionPane.INFORMATION_MESSAGE);
         }
        else{
            if(this.parid_text.getText().isEmpty()){
            confirm= (byte) (confirm+1);
            this.parid_text.setText(""+parid);
            JOptionPane.showMessageDialog(this, "Your Participant ID is "+parid, "Keep in Mind", JOptionPane.INFORMATION_MESSAGE);
         }
            else{
            if(parid==(Integer.parseInt(this.parid_text.getText()))){
            confirm= (byte) (confirm+1);
            }
         else{
            this.parid_text.setText(""+parid);
            confirm= (byte) (confirm+1);
            JOptionPane.showMessageDialog(this, "Your Participant ID is "+parid, "Keep in Mind", JOptionPane.INFORMATION_MESSAGE);
         }
            }
         }
      } 
      catch (FileNotFoundException ex) {
         Logger.getLogger(page1.class.getName()).log(Level.SEVERE, null, ex);
      } catch (IOException ex) {
         Logger.getLogger(page1.class.getName()).log(Level.SEVERE, null, ex);
      }
         
       if(confirm==3)
         {
      dispose();
         Main.parid = (String)this.parid_text.getText();
         Main.name = this.name_text.getText();
         Main.main2();}
       else
          {confirm=0;
          }  
        }
   }//GEN-LAST:event_name_textKeyPressed

   /**
    * @param args the command line arguments
    */
   public static void main(String args[]) {
      /*
       * Set the Nimbus look and feel
       */
      //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
       * If Nimbus (introduced in Java SE 6) is not available, stay with the
       * default look and feel. For details see
       * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
       */
      try {
         for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
            if ("Nimbus".equals(info.getName())) {
               javax.swing.UIManager.setLookAndFeel(info.getClassName());
               break;
            }
         }
      } catch (ClassNotFoundException ex) {
         java.util.logging.Logger.getLogger(page1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      } catch (InstantiationException ex) {
         java.util.logging.Logger.getLogger(page1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      } catch (IllegalAccessException ex) {
         java.util.logging.Logger.getLogger(page1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      } catch (javax.swing.UnsupportedLookAndFeelException ex) {
         java.util.logging.Logger.getLogger(page1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      }
      //</editor-fold>

      /*
       * Create and display the form
       */
      java.awt.EventQueue.invokeLater(new Runnable() {

         public void run() {
             new page1().setVisible(true);
            
         }
      });
   }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton about_button;
    private javax.swing.JLabel background1;
    private javax.swing.JButton continue1;
    private javax.swing.JLabel continue_label;
    private javax.swing.JLabel jackal_pic;
    private javax.swing.JLabel name_label;
    private javax.swing.JTextField name_text;
    private javax.swing.JLabel parid_label;
    private javax.swing.JTextField parid_text;
    private javax.swing.JButton register_button;
    private javax.swing.JLabel titulo;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

   private ImageIcon createImageIcon(String imagesmiddlegif, String a_pretty_but_meaningless_splat) {
      throw new UnsupportedOperationException("Not yet implemented");
   }
}
